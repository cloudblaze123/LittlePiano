{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,COAO,SAAS,EAA6B,CAAK,EAC9C,MAAgB,CAAC;0FACqE,EAAE,EAAM,mCAAmC,EAAE,EAAM;IACzI,CAAC,AACL,CACO,SAAS,EAA6B,CAAK,EAC9C,MAAgB,CAAC;0FACqE,EAAE,EAAM,mCAAmC,EAAE,EAAM;IACzI,CAAC,AACL,CFPO,SAAS,EAAqB,CAAK,EACtC,MAAgB;iDAC6B;;;cCCnC,AAAA,EAA6B,IDAH;cCC1B,AAAA,EAA6B,IDDH;cCE1B,AAAA,EAA6B,IDFH;cCG1B,AAAA,EAA6B,IDHH;cCI1B,AAAA,EAA6B,IDJH;cCK1B,AAAA,EAA6B,IDLH;cCM1B,AAAA,EAA6B,IDNH;;;;;cCa1B,AAAA,EAA6B,KDZH;cCa1B,AAAA,EAA6B,KDbH;cCc1B,AAAA,EAA6B,KDdH;cCe1B,AAAA,EAA6B,KDfH;cCgB1B,AAAA,EAA6B,KDhBH;;;;KAEnC,AACL,C,M,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,I,E,I,A,G,E,E,W,C,E,a,C,C,GJPA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,GCVA,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,oHECrF,MAAM,EAAiC,CAAC;;IAE3C,EAAE,AAAA,EAAqB,GAAG;IAC1B,EAAE,AAAA,EAAqB,GAAG;IAC1B,EAAE,AAAA,EAAqB,GAAG;IAC1B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","sources":["<anon>","node_modules/.store/@parcel+runtime-js@2.11.0/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/.store/@parcel+runtime-js@2.11.0/node_modules/@parcel/runtime-js/lib/runtime-cc6ce54aa56a00a7.js","src/component/piano-keyboard/web_component/piano_keyboard.js","src/component/piano-keyboard/web_component/piano-keyboard-template.js","src/component/piano-keyboard/web_component/createOctaveTemplate.js","src/component/piano-keyboard/web_component/createKeybuttonsTemplate.js","src/component/piano-keyboard/web_component/createKeybuttonTemplate.js","src/component/piano-keyboard/web_component/piano-keyboard-style.js","node_modules/.store/@parcel+runtime-js@2.11.0/node_modules/@parcel/runtime-js/lib/runtime-84089b1ac9e97fc3.js","src/component/piano-keyboard/web_component/piano_keyboard-viewModel.js","src/component/piano-keyboard/web_component/piano_keyboard-mouseEventHandler.js","src/component/piano-keyboard/web_component/piano_keyboard-touchEventHandler.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"aBxu6\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $7b875563ac389209$export$6503ec6e8aabbaf, (v) => $7b875563ac389209$export$6503ec6e8aabbaf = v);\nvar $7b875563ac389209$export$6503ec6e8aabbaf;\nvar $7b875563ac389209$export$f7ad0328861e2f03;\n\"use strict\";\nvar $7b875563ac389209$var$mapping = new Map();\nfunction $7b875563ac389209$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$7b875563ac389209$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $7b875563ac389209$var$resolve(id) {\n    var resolved = $7b875563ac389209$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$7b875563ac389209$export$6503ec6e8aabbaf = $7b875563ac389209$var$register;\n$7b875563ac389209$export$f7ad0328861e2f03 = $7b875563ac389209$var$resolve;\n\n});\n\nvar $8f8cafeb953667b8$exports = {};\n\n(parcelRequire(\"aBxu6\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"ll2Wh\",\"play_instrument.9d4a4bfb.js\",\"ePn4t\",\"piano_keyboard.cf11986b.css\"]'));\n\nfunction $a2cec5fb6ba05d81$export$81642d5e8107c35d(pitch) {\n    return /*html*/ `\r\n        <div class=\"keybutton_container\"><button class=\"keybutton white_keybutton\" pitch=\"${pitch}\"><div class=\"keybutton-pitch_tag\">${pitch}</div></button></div>\r\n    `;\n}\nfunction $a2cec5fb6ba05d81$export$22ed30b0c07e6641(pitch) {\n    return /*html*/ `\r\n        <div class=\"keybutton_container\"><button class=\"keybutton black_keybutton\" pitch=\"${pitch}\"><div class=\"keybutton-pitch_tag\">${pitch}</div></button></div>\r\n    `;\n}\n\n\nfunction $06a9a3dd9752de2d$export$ab7be7026b4749f4(octave) {\n    return /*html*/ `\r\n        <div class=\"white_keybuttons\">\r\n            ${(0, $a2cec5fb6ba05d81$export$81642d5e8107c35d)(\"C\" + octave)}\r\n            ${(0, $a2cec5fb6ba05d81$export$81642d5e8107c35d)(\"D\" + octave)}\r\n            ${(0, $a2cec5fb6ba05d81$export$81642d5e8107c35d)(\"E\" + octave)}\r\n            ${(0, $a2cec5fb6ba05d81$export$81642d5e8107c35d)(\"F\" + octave)}\r\n            ${(0, $a2cec5fb6ba05d81$export$81642d5e8107c35d)(\"G\" + octave)}\r\n            ${(0, $a2cec5fb6ba05d81$export$81642d5e8107c35d)(\"A\" + octave)}\r\n            ${(0, $a2cec5fb6ba05d81$export$81642d5e8107c35d)(\"B\" + octave)}\r\n        </div>\r\n    `;\n}\nfunction $06a9a3dd9752de2d$export$922e72ac0272f944(octave) {\n    return /*html*/ `\r\n        <div class=\"black_keybuttons\">\r\n            ${(0, $a2cec5fb6ba05d81$export$22ed30b0c07e6641)(\"C#\" + octave)}\r\n            ${(0, $a2cec5fb6ba05d81$export$22ed30b0c07e6641)(\"D#\" + octave)}\r\n            ${(0, $a2cec5fb6ba05d81$export$22ed30b0c07e6641)(\"F#\" + octave)}\r\n            ${(0, $a2cec5fb6ba05d81$export$22ed30b0c07e6641)(\"G#\" + octave)}\r\n            ${(0, $a2cec5fb6ba05d81$export$22ed30b0c07e6641)(\"A#\" + octave)}\r\n        </div>\r\n    `;\n}\n\n\nfunction $bede1a833e785154$export$20adcbf62bfd677a(pitch) {\n    return /*html*/ `\r\n    <div class=\"piano_keyboard-octave\" octave=\"${pitch}\">\r\n        ${(0, $06a9a3dd9752de2d$export$ab7be7026b4749f4)(pitch)}\r\n        ${(0, $06a9a3dd9752de2d$export$922e72ac0272f944)(pitch)}\r\n    </div>\r\n    `;\n}\n\n\nconst $df05e7a7252c168a$export$8c5538d39f6c9677 = /*html*/ `\r\n<div class=\"piano_keyboard\">\r\n    ${(0, $bede1a833e785154$export$20adcbf62bfd677a)(2)}\r\n    ${(0, $bede1a833e785154$export$20adcbf62bfd677a)(3)}\r\n    ${(0, $bede1a833e785154$export$20adcbf62bfd677a)(4)}\r\n    ${(0, $bede1a833e785154$export$20adcbf62bfd677a)(5)}\r\n    ${(0, $bede1a833e785154$export$20adcbf62bfd677a)(6)}\r\n</div>\r\n`;\n\n\nvar $ebe16c07d5eddf42$exports = {};\n$ebe16c07d5eddf42$exports = new URL(\"piano_keyboard.cf11986b.css\", import.meta.url).toString();\n\n\nconst $e37d6f5b936fe7c1$var$styleUrl = new URL($ebe16c07d5eddf42$exports).href;\nconst $e37d6f5b936fe7c1$export$ae8cf02b7e6604f5 = /*html*/ `\r\n<link rel=\"stylesheet\" href=\"${$e37d6f5b936fe7c1$var$styleUrl}\">\r\n`;\n\n\nclass $7d7dcba7de2ec382$export$be9fdf810b9c9ab4 {\n    constructor(pianoKeyboard, pianoKeyboardShadowRoot){\n        this._pianoKeyboard = pianoKeyboard;\n        this._shadowRoot = pianoKeyboardShadowRoot;\n        this._initAttribute();\n    }\n    _initAttribute() {\n        this._keybuttons = {};\n        const keybuttons = this._shadowRoot.querySelectorAll(\".keybutton\");\n        for (const keybutton of keybuttons){\n            const pitch = keybutton.getAttribute(\"pitch\");\n            this._keybuttons[pitch] = keybutton;\n        }\n        this._lastPlayedKeybuttons = new Set();\n    }\n    getLastPlayedKeybuttons() {\n        // console.log(\"getLastPlayedKeybuttons\"+this._lastPlayedKeybuttons);\n        // console.log(this._lastPlayedKeybuttons);\n        return this._lastPlayedKeybuttons;\n    }\n    getKeybutton(pitch) {\n        return this._keybuttons[pitch];\n    }\n    onKeybuttonDown(...keybuttons) {\n        for (const keybutton of keybuttons)this._onKeybuttonDown(keybutton);\n    }\n    _onKeybuttonDown(keybutton) {\n        this._lastPlayedKeybuttons.add(keybutton);\n        keybutton.classList.add(\"active\");\n        const pitch = keybutton.getAttribute(\"pitch\");\n        this._pianoKeyboard._onTriggerAttacked(pitch);\n    }\n    onKeybuttonUp(...keybuttons) {\n        // console.log(\"viewModel onKeybuttonUp\");\n        for (const keybutton of keybuttons)this._onKeybuttonUp(keybutton);\n    }\n    _onKeybuttonUp(keybutton) {\n        this._lastPlayedKeybuttons.delete(keybutton);\n        keybutton.classList.remove(\"active\");\n        const pitch = keybutton.getAttribute(\"pitch\");\n        // console.log(`viewModel._pianoKeyboard._onTriggerReleased(${pitch});`)\n        this._pianoKeyboard._onTriggerReleased(pitch);\n    }\n    attackTrigger(pitch) {\n        if (!(pitch in this._keybuttons)) console.log(`${this}'s keybuttons don't support pitch:${pitch}`);\n        this._onKeybuttonDown(this._keybuttons[pitch]);\n    }\n    hidePitchTag() {\n        const PianoKeyboardElement = this._shadowRoot.querySelector(\".piano_keyboard\");\n        PianoKeyboardElement.setAttribute(\"hide_pitch_tag\", \"\");\n    }\n    showPitchTag() {\n        const PianoKeyboardElement = this._shadowRoot.querySelector(\".piano_keyboard\");\n        PianoKeyboardElement.removeAttribute(\"hide_pitch_tag\");\n    }\n}\n\n\nclass $efd28ac6c1b57cf3$export$995563f7c34ce99b {\n    constructor(pianoKeyboardViewModel, pianoKeyboardShadowRoot){\n        this._isMouseDown = false;\n        this._viewModel = pianoKeyboardViewModel;\n        this._shadowRoot = pianoKeyboardShadowRoot;\n        this._initHandler();\n    }\n    _initHandler() {\n        /*初始化钢琴键盘事件*/ this._shadowRoot.addEventListener(\"mousedown\", (function() {\n            this._isMouseDown = true;\n        }).bind(this));\n        this._shadowRoot.addEventListener(\"mouseup\", (function() {\n            this._isMouseDown = false;\n        }).bind(this));\n        this._shadowRoot.querySelector(\".piano_keyboard\").addEventListener(\"mouseleave\", (function() {\n            //！！！hack！！！\n            //此处(this._shadowRoot.querySelector(\".piano_keyboard\") as HTMLElement)是一个hack\n            //原本的代码是this._shadowRoot.addEventListener(\"mouseleave\", function(this:PianoKeyboardMouseEventHandler){\n            //但使用\"mouseleave\"时，鼠标移出键盘外时不会触发mouseleave\n            //以下是gpt的解释\n            //因为\"mouseleave\" 事件并不会冒泡，也就是说它不会向父元素传递。而 Shadow DOM 是相对于主 DOM 视为封闭和独立的，主 DOM 中元素的事件无法传递给 Shadow DOM 中元素，除非该事件能够冒泡。\n            //因此，如果您将 \"mouseleave\" 事件的监听添加到 shadow root，那么在 shadow root 内部的元素触发 \"mouseleave\" 事件时，监听函数并不会被调用，因为 \"mouseleave\" 事件不会冒泡到 shadow root。\n            //你可以尝试使用 \"mouseout\" 事件替代 \"mouseleave\" 事件。 \"mouseout\" 事件也是在鼠标离开元素时触发，与 \"mouseleave\" 不同的是，\"mouseout\" 事件是可以冒泡的。\n            //但请注意 \"mouseout\" 事件的行为与 \"mouseleave\" 并不完全相同，当鼠标指针移到元素的子元素上时也会触发 \"mouseout\" 事件。\n            //如果你需要模拟 \"mouseleave\" 的行为，你可能需要在事件处理器里做一些额外的判断。\n            //gpt的解释结束\n            //对比使用mouseout的代码后\n            //我决定暂时继续使用mouseleave（得益于模板中有一个<div class=\"piano_keyboard\">根元素，所以可以暂时用它替代shadowRoot）\n            this._isMouseDown = false;\n        }).bind(this));\n        /*初始化琴键事件，当用户与琴键交互时执行*/ const keybuttons = this._shadowRoot.querySelectorAll(\".keybutton\");\n        for (const keybutton of keybuttons){\n            /*初始化琴键鼠标事件，当用户使用鼠标与琴键交互时执行*/ keybutton.addEventListener(\"mousedown\", (function(event) {\n                // console.log(\"mousedown\");\n                const keybutton = event.target;\n                this._onKeybuttonDown(keybutton);\n            }).bind(this));\n            keybutton.addEventListener(\"mouseenter\", (function(event) {\n                // console.log(\"mouseenter\");\n                const keybutton = event.target;\n                // console.log(this._isMouseDown);\n                if (this._isMouseDown) this._onKeybuttonDown(keybutton);\n            }).bind(this));\n            keybutton.addEventListener(\"mouseup\", (function(event) {\n                // console.log(\"mouseup\");\n                const keybutton = event.target;\n                if (this._isKeyButtonLastPlayed(keybutton)) this._onKeybuttonUp(keybutton);\n            }).bind(this));\n            keybutton.addEventListener(\"mouseleave\", (function(event) {\n                // console.log(\"mouseleave\");\n                const keybutton = event.target;\n                if (this._isKeyButtonLastPlayed(keybutton)) this._onKeybuttonUp(keybutton);\n            }).bind(this));\n        }\n    }\n    _isKeyButtonLastPlayed(keybutton) {\n        return this._viewModel.getLastPlayedKeybuttons().has(keybutton);\n    }\n    _onKeybuttonDown(keybutton) {\n        this._viewModel.onKeybuttonDown(keybutton);\n    }\n    _onKeybuttonUp(keybutton) {\n        this._viewModel.onKeybuttonUp(keybutton);\n    }\n}\n\n\nclass $b4e0c60b74737c6e$export$264188db84e8841 {\n    constructor(pianoKeyboardViewModel, pianoKeyboardShadowRoot){\n        this._viewModel = pianoKeyboardViewModel;\n        this._shadowRoot = pianoKeyboardShadowRoot;\n        this._boundOnTouchStart = this._onTouchStart.bind(this);\n        this._boundOnTouchMove = this._onTouchMove.bind(this);\n        this._boundOnTouchEnd = this._onTouchEnd.bind(this);\n        this._isDisabled = false;\n        this._initHandler();\n    }\n    _initHandler() {\n        // console.log(\"_initHandler\");\n        const keyboard = this._shadowRoot.querySelector(\".piano_keyboard\");\n        this._setInputContext(keyboard);\n    }\n    _setInputContext(inputContext) {\n        this._inputContext = inputContext;\n        /*绑定输入上下文的触控监听，当用户与输入上下文交互时执行*/ inputContext.addEventListener(\"touchstart\", this._boundOnTouchStart);\n        inputContext.addEventListener(\"touchmove\", this._boundOnTouchMove);\n        inputContext.addEventListener(\"touchend\", this._boundOnTouchEnd);\n    // console.log(\"PianoKeyboardTouchEventHandler _setInputContext() this._boundOnTouchStart\");\n    // console.log(this._boundOnTouchStart);\n    }\n    _clearInputContext() {\n        /*移除原有的输入上下文的触控监听*/ this._inputContext.removeEventListener(\"touchstart\", this._boundOnTouchStart);\n        this._inputContext.removeEventListener(\"touchmove\", this._boundOnTouchMove);\n        this._inputContext.removeEventListener(\"touchend\", this._boundOnTouchEnd);\n    // console.log(\"PianoKeyboardTouchEventHandler _clearInputContext()\");\n    // console.log(\"PianoKeyboardTouchEventHandler _clearInputContext() this._boundOnTouchStart\");\n    // console.log(this._boundOnTouchStart);\n    }\n    _changeInputContext(inputContext) {\n        this._clearInputContext();\n        this._setInputContext(inputContext);\n    }\n    setInputContext(inputContext) {\n        this._changeInputContext(inputContext);\n    }\n    disableInput() {\n        // console.log(\"PianoKeyboardTouchEventHandler disableInput()\");\n        this._isDisabled = true;\n    }\n    enableInput() {\n        this._isDisabled = false;\n    }\n    _onTouchStart(event) {\n        if (this._isDisabled) return;\n        event.preventDefault(); //用来防止按键事件在mousedown再处理一次\n        // console.log(\"touchstart\");\n        const keybuttons = this._getKeybuttonsFromTouch(event.touches);\n        this._onKeybuttonsDown(...keybuttons);\n    }\n    _onTouchMove(event) {\n        if (this._isDisabled) return;\n        event.preventDefault(); //阻止默认的滚动行为\n        // console.log(\"touchmove\");\n        const keybuttonsTouched = this._getKeybuttonsFromTouch(event.touches);\n        const keybuttonsNewDown = [];\n        const keybuttonsNewUp = [];\n        // console.log(\"keybuttonsTouched \"+keybuttonsTouched);\n        for (const keybutton of keybuttonsTouched)// console.log(\"keybuttonsTouched \"+keybutton);\n        if (!this._isKeyButtonLastPlayed(keybutton)) keybuttonsNewDown.push(keybutton);\n        for (const keybuttonLastPlayed of this._getKeyButtonsLastPlayed())if (!keybuttonsTouched.includes(keybuttonLastPlayed)) keybuttonsNewUp.push(keybuttonLastPlayed);\n        // console.log(\"keybuttonsNewDown \"+keybuttonsNewDown);\n        // console.log(\"keybuttonsNewUp \"+keybuttonsNewUp);\n        this._onKeybuttonsDown(...keybuttonsNewDown);\n        this._onKeybuttonsUp(...keybuttonsNewUp);\n    }\n    _onTouchEnd(event) {\n        if (this._isDisabled) return;\n        // console.log(\"touchend\");\n        const keybuttonsTouchEnd = this._getKeybuttonsFromTouch(event.changedTouches);\n        this._onKeybuttonsUp(...keybuttonsTouchEnd);\n    }\n    _getKeybuttonsFromTouch(touchs) {\n        const keybuttons = [];\n        for (const touch of Array.from(touchs)){\n            const keybutton = this._getKeybuttonFromTouch(touch);\n            if (keybutton !== null) keybuttons.push(keybutton);\n        }\n        return keybuttons;\n    }\n    _getKeybuttonFromTouch(touch) {\n        const x = touch.clientX;\n        const y = touch.clientY;\n        // console.log(`touch at (${x}, ${y})`);\n        const targetElement = this._shadowRoot.elementFromPoint(x, y);\n        // 检查是否为 key 类的元素，如果是，则返回该元素\n        if (targetElement && targetElement.classList.contains(\"keybutton\")) // console.log(`get key ${targetElement}`);\n        return targetElement;\n        else // 如果不是钢琴键，则返回 null\n        return null;\n    }\n    _isKeyButtonLastPlayed(keybutton) {\n        // console.log(\"_isKeyButtonLastPlayed \"+this._viewModel.getLastPlayedKeybuttons().has(keybutton));;\n        return this._viewModel.getLastPlayedKeybuttons().has(keybutton);\n    }\n    _getKeyButtonsLastPlayed() {\n        return this._viewModel.getLastPlayedKeybuttons();\n    }\n    _onKeybuttonsDown(...keybuttons) {\n        this._viewModel.onKeybuttonDown(...keybuttons);\n    }\n    _onKeybuttonsUp(...keybuttons) {\n        this._viewModel.onKeybuttonUp(...keybuttons);\n    }\n}\n\n\nclass $5dca4c19303d383d$export$5581ec00194cd222 extends HTMLElement {\n    constructor(){\n        super(); // 调用父类的 constructor\n        this._onTriggerAttacked = function(pitch) {\n            console.log(\"attack trigger: \" + pitch);\n        };\n        this._onTriggerReleased = function(pitch) {\n            console.log(\"release trigger: \" + pitch);\n        };\n        this._createDOM();\n        this._viewModel = new (0, $7d7dcba7de2ec382$export$be9fdf810b9c9ab4)(this, this.shadowRoot);\n        this._mouseEventHandler = new (0, $efd28ac6c1b57cf3$export$995563f7c34ce99b)(this._viewModel, this.shadowRoot);\n        this._touchEventHandler = new (0, $b4e0c60b74737c6e$export$264188db84e8841)(this._viewModel, this.shadowRoot);\n    }\n    _createDOM() {\n        const shadowRoot = this.attachShadow({\n            mode: \"open\"\n        });\n        shadowRoot.innerHTML = (0, $e37d6f5b936fe7c1$export$ae8cf02b7e6604f5) + (0, $df05e7a7252c168a$export$8c5538d39f6c9677);\n    }\n    static get observedAttributes() {\n        return [\n            \"hide_pitch_tag\",\n            \"disabled\"\n        ];\n    }\n    attributeChangedCallback(attrName, oldVal, newVal) {\n        // console.log(\"attributeChangedCallback\");\n        if (attrName === \"hide_pitch_tag\") this._onAttributeHidePitchTagChanged(oldVal, newVal);\n        else if (attrName === \"disabled\") this._onAttributeDisabledChanged(oldVal, newVal);\n    }\n    _isAttributeAdded(oldVal, newVal) {\n        // console.log(\"_isAttributeAdded\")\n        if (oldVal === null) return true;\n        else return false;\n    }\n    _isAttributeRemoved(oldVal, newVal) {\n        // console.log(\"_isAttributeRemoved\")\n        if (newVal === null) return true;\n        else return false;\n    }\n    _onAttributeDisabledChanged(oldVal, newVal) {\n        /*目前暂时只关闭触控输入*/ if (this._isAttributeAdded(oldVal, newVal)) this._touchEventHandler.disableInput();\n        else if (this._isAttributeRemoved(oldVal, newVal)) // console.log(\"enableInput\")\n        this._touchEventHandler.enableInput();\n    }\n    _onAttributeHidePitchTagChanged(oldVal, newVal) {\n        if (this._isAttributeAdded(oldVal, newVal)) this._viewModel.hidePitchTag();\n        else if (this._isAttributeRemoved(oldVal, newVal)) this._viewModel.showPitchTag();\n    }\n    set onTriggerAttacked(callback) {\n        this._onTriggerAttacked = callback;\n    }\n    get onTriggerAttacked() {\n        return this._onTriggerAttacked;\n    }\n    set onTriggerReleased(callback) {\n        this._onTriggerReleased = callback;\n    }\n    get onTriggerReleased() {\n        return this._onTriggerReleased;\n    }\n    setInputContext(inputContext) {\n        this._touchEventHandler.setInputContext(inputContext);\n    }\n    attackTrigger(pitch) {\n        console.log(`PianoKeyboard attackTrigger(${pitch})`);\n        this._viewModel.attackTrigger(pitch);\n    }\n}\ncustomElements.define(\"piano-keyboard\", $5dca4c19303d383d$export$5581ec00194cd222);\n\n\n//# sourceMappingURL=play_instrument.9d4a4bfb.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"ll2Wh\\\",\\\"play_instrument.9d4a4bfb.js\\\",\\\"ePn4t\\\",\\\"piano_keyboard.cf11986b.css\\\"]\"));","import { pianoKeyboardTemplate } from \"./piano-keyboard-template.js\";\nimport { pianoKeyboardStyle } from \"./piano-keyboard-style.js\";\nimport { PianoKeyboardViewModel } from \"./piano_keyboard-viewModel.js\";\nimport { PianoKeyboardMouseEventHandler } from \"./piano_keyboard-mouseEventHandler.js\";\nimport { PianoKeyboardTouchEventHandler } from \"./piano_keyboard-touchEventHandler.js\";\nexport class PianoKeyboard extends HTMLElement {\n    constructor() {\n        super(); // 调用父类的 constructor\n        this._onTriggerAttacked = function (pitch) { console.log(\"attack trigger: \" + pitch); };\n        this._onTriggerReleased = function (pitch) { console.log(\"release trigger: \" + pitch); };\n        this._createDOM();\n        this._viewModel = new PianoKeyboardViewModel(this, this.shadowRoot);\n        this._mouseEventHandler = new PianoKeyboardMouseEventHandler(this._viewModel, this.shadowRoot);\n        this._touchEventHandler = new PianoKeyboardTouchEventHandler(this._viewModel, this.shadowRoot);\n    }\n    _createDOM() {\n        const shadowRoot = this.attachShadow({ mode: \"open\" });\n        shadowRoot.innerHTML = pianoKeyboardStyle + pianoKeyboardTemplate;\n    }\n    static get observedAttributes() {\n        return ['hide_pitch_tag', 'disabled'];\n    }\n    attributeChangedCallback(attrName, oldVal, newVal) {\n        // console.log(\"attributeChangedCallback\");\n        if (attrName === 'hide_pitch_tag') {\n            this._onAttributeHidePitchTagChanged(oldVal, newVal);\n        }\n        else if (attrName === 'disabled') {\n            this._onAttributeDisabledChanged(oldVal, newVal);\n        }\n    }\n    _isAttributeAdded(oldVal, newVal) {\n        // console.log(\"_isAttributeAdded\")\n        if (oldVal === null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    _isAttributeRemoved(oldVal, newVal) {\n        // console.log(\"_isAttributeRemoved\")\n        if (newVal === null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    _onAttributeDisabledChanged(oldVal, newVal) {\n        /*目前暂时只关闭触控输入*/\n        if (this._isAttributeAdded(oldVal, newVal)) {\n            this._touchEventHandler.disableInput();\n        }\n        else if (this._isAttributeRemoved(oldVal, newVal)) {\n            // console.log(\"enableInput\")\n            this._touchEventHandler.enableInput();\n        }\n    }\n    _onAttributeHidePitchTagChanged(oldVal, newVal) {\n        if (this._isAttributeAdded(oldVal, newVal)) {\n            this._viewModel.hidePitchTag();\n        }\n        else if (this._isAttributeRemoved(oldVal, newVal)) {\n            this._viewModel.showPitchTag();\n        }\n    }\n    set onTriggerAttacked(callback) {\n        this._onTriggerAttacked = callback;\n    }\n    get onTriggerAttacked() {\n        return this._onTriggerAttacked;\n    }\n    set onTriggerReleased(callback) {\n        this._onTriggerReleased = callback;\n    }\n    get onTriggerReleased() {\n        return this._onTriggerReleased;\n    }\n    setInputContext(inputContext) {\n        this._touchEventHandler.setInputContext(inputContext);\n    }\n    attackTrigger(pitch) {\n        console.log(`PianoKeyboard attackTrigger(${pitch})`);\n        this._viewModel.attackTrigger(pitch);\n    }\n}\ncustomElements.define('piano-keyboard', PianoKeyboard);\n","import { createOctaveTemplate } from \"./createOctaveTemplate.js\";\nexport const pianoKeyboardTemplate = /*html*/ `\r\n<div class=\"piano_keyboard\">\r\n    ${createOctaveTemplate(2)}\r\n    ${createOctaveTemplate(3)}\r\n    ${createOctaveTemplate(4)}\r\n    ${createOctaveTemplate(5)}\r\n    ${createOctaveTemplate(6)}\r\n</div>\r\n`;\n","import { createWhiteKeybuttonsTemplate } from \"./createKeybuttonsTemplate.js\";\nimport { createBlackKeybuttonsTemplate } from \"./createKeybuttonsTemplate.js\";\nexport function createOctaveTemplate(pitch) {\n    return /*html*/ `\r\n    <div class=\"piano_keyboard-octave\" octave=\"${pitch}\">\r\n        ${createWhiteKeybuttonsTemplate(pitch)}\r\n        ${createBlackKeybuttonsTemplate(pitch)}\r\n    </div>\r\n    `;\n}\n","import { createWhiteKeybuttonTemplate } from \"./createKeybuttonTemplate.js\";\nimport { createBlackKeybuttonTemplate } from \"./createKeybuttonTemplate.js\";\nexport function createWhiteKeybuttonsTemplate(octave) {\n    return /*html*/ `\r\n        <div class=\"white_keybuttons\">\r\n            ${createWhiteKeybuttonTemplate(\"C\" + octave)}\r\n            ${createWhiteKeybuttonTemplate(\"D\" + octave)}\r\n            ${createWhiteKeybuttonTemplate(\"E\" + octave)}\r\n            ${createWhiteKeybuttonTemplate(\"F\" + octave)}\r\n            ${createWhiteKeybuttonTemplate(\"G\" + octave)}\r\n            ${createWhiteKeybuttonTemplate(\"A\" + octave)}\r\n            ${createWhiteKeybuttonTemplate(\"B\" + octave)}\r\n        </div>\r\n    `;\n}\nexport function createBlackKeybuttonsTemplate(octave) {\n    return /*html*/ `\r\n        <div class=\"black_keybuttons\">\r\n            ${createBlackKeybuttonTemplate(\"C#\" + octave)}\r\n            ${createBlackKeybuttonTemplate(\"D#\" + octave)}\r\n            ${createBlackKeybuttonTemplate(\"F#\" + octave)}\r\n            ${createBlackKeybuttonTemplate(\"G#\" + octave)}\r\n            ${createBlackKeybuttonTemplate(\"A#\" + octave)}\r\n        </div>\r\n    `;\n}\n","export function createWhiteKeybuttonTemplate(pitch) {\n    return /*html*/ `\r\n        <div class=\"keybutton_container\"><button class=\"keybutton white_keybutton\" pitch=\"${pitch}\"><div class=\"keybutton-pitch_tag\">${pitch}</div></button></div>\r\n    `;\n}\nexport function createBlackKeybuttonTemplate(pitch) {\n    return /*html*/ `\r\n        <div class=\"keybutton_container\"><button class=\"keybutton black_keybutton\" pitch=\"${pitch}\"><div class=\"keybutton-pitch_tag\">${pitch}</div></button></div>\r\n    `;\n}\n","const styleUrl = (new URL('./piano_keyboard.css', import.meta.url)).href;\nexport const pianoKeyboardStyle = /*html*/ `\r\n<link rel=\"stylesheet\" href=\"${styleUrl}\">\r\n`;\n","module.exports = new __parcel__URL__(\"piano_keyboard.cf11986b.css\").toString();","export class PianoKeyboardViewModel {\n    constructor(pianoKeyboard, pianoKeyboardShadowRoot) {\n        this._pianoKeyboard = pianoKeyboard;\n        this._shadowRoot = pianoKeyboardShadowRoot;\n        this._initAttribute();\n    }\n    _initAttribute() {\n        this._keybuttons = {};\n        const keybuttons = this._shadowRoot.querySelectorAll(\".keybutton\");\n        for (const keybutton of keybuttons) {\n            const pitch = keybutton.getAttribute(\"pitch\");\n            this._keybuttons[pitch] = keybutton;\n        }\n        this._lastPlayedKeybuttons = new Set();\n    }\n    getLastPlayedKeybuttons() {\n        // console.log(\"getLastPlayedKeybuttons\"+this._lastPlayedKeybuttons);\n        // console.log(this._lastPlayedKeybuttons);\n        return this._lastPlayedKeybuttons;\n    }\n    getKeybutton(pitch) {\n        return this._keybuttons[pitch];\n    }\n    onKeybuttonDown(...keybuttons) {\n        for (const keybutton of keybuttons) {\n            this._onKeybuttonDown(keybutton);\n        }\n    }\n    _onKeybuttonDown(keybutton) {\n        this._lastPlayedKeybuttons.add(keybutton);\n        keybutton.classList.add(\"active\");\n        const pitch = keybutton.getAttribute(\"pitch\");\n        this._pianoKeyboard._onTriggerAttacked(pitch);\n    }\n    onKeybuttonUp(...keybuttons) {\n        // console.log(\"viewModel onKeybuttonUp\");\n        for (const keybutton of keybuttons) {\n            this._onKeybuttonUp(keybutton);\n        }\n    }\n    _onKeybuttonUp(keybutton) {\n        this._lastPlayedKeybuttons.delete(keybutton);\n        keybutton.classList.remove(\"active\");\n        const pitch = keybutton.getAttribute(\"pitch\");\n        // console.log(`viewModel._pianoKeyboard._onTriggerReleased(${pitch});`)\n        this._pianoKeyboard._onTriggerReleased(pitch);\n    }\n    attackTrigger(pitch) {\n        if (!(pitch in this._keybuttons)) {\n            console.log(`${this}'s keybuttons don't support pitch:${pitch}`);\n        }\n        this._onKeybuttonDown(this._keybuttons[pitch]);\n    }\n    hidePitchTag() {\n        const PianoKeyboardElement = this._shadowRoot.querySelector(\".piano_keyboard\");\n        PianoKeyboardElement.setAttribute(\"hide_pitch_tag\", \"\");\n    }\n    showPitchTag() {\n        const PianoKeyboardElement = this._shadowRoot.querySelector(\".piano_keyboard\");\n        PianoKeyboardElement.removeAttribute(\"hide_pitch_tag\");\n    }\n}\n","export class PianoKeyboardMouseEventHandler {\n    constructor(pianoKeyboardViewModel, pianoKeyboardShadowRoot) {\n        this._isMouseDown = false;\n        this._viewModel = pianoKeyboardViewModel;\n        this._shadowRoot = pianoKeyboardShadowRoot;\n        this._initHandler();\n    }\n    _initHandler() {\n        /*初始化钢琴键盘事件*/\n        this._shadowRoot.addEventListener(\"mousedown\", function () {\n            this._isMouseDown = true;\n        }.bind(this));\n        this._shadowRoot.addEventListener(\"mouseup\", function () {\n            this._isMouseDown = false;\n        }.bind(this));\n        this._shadowRoot.querySelector(\".piano_keyboard\").addEventListener(\"mouseleave\", function () {\n            //！！！hack！！！\n            //此处(this._shadowRoot.querySelector(\".piano_keyboard\") as HTMLElement)是一个hack\n            //原本的代码是this._shadowRoot.addEventListener(\"mouseleave\", function(this:PianoKeyboardMouseEventHandler){\n            //但使用\"mouseleave\"时，鼠标移出键盘外时不会触发mouseleave\n            //以下是gpt的解释\n            //因为\"mouseleave\" 事件并不会冒泡，也就是说它不会向父元素传递。而 Shadow DOM 是相对于主 DOM 视为封闭和独立的，主 DOM 中元素的事件无法传递给 Shadow DOM 中元素，除非该事件能够冒泡。\n            //因此，如果您将 \"mouseleave\" 事件的监听添加到 shadow root，那么在 shadow root 内部的元素触发 \"mouseleave\" 事件时，监听函数并不会被调用，因为 \"mouseleave\" 事件不会冒泡到 shadow root。\n            //你可以尝试使用 \"mouseout\" 事件替代 \"mouseleave\" 事件。 \"mouseout\" 事件也是在鼠标离开元素时触发，与 \"mouseleave\" 不同的是，\"mouseout\" 事件是可以冒泡的。\n            //但请注意 \"mouseout\" 事件的行为与 \"mouseleave\" 并不完全相同，当鼠标指针移到元素的子元素上时也会触发 \"mouseout\" 事件。\n            //如果你需要模拟 \"mouseleave\" 的行为，你可能需要在事件处理器里做一些额外的判断。\n            //gpt的解释结束\n            //对比使用mouseout的代码后\n            //我决定暂时继续使用mouseleave（得益于模板中有一个<div class=\"piano_keyboard\">根元素，所以可以暂时用它替代shadowRoot）\n            this._isMouseDown = false;\n        }.bind(this));\n        /*初始化琴键事件，当用户与琴键交互时执行*/\n        const keybuttons = this._shadowRoot.querySelectorAll(\".keybutton\");\n        for (const keybutton of keybuttons) {\n            /*初始化琴键鼠标事件，当用户使用鼠标与琴键交互时执行*/\n            keybutton.addEventListener(\"mousedown\", function (event) {\n                // console.log(\"mousedown\");\n                const keybutton = event.target;\n                this._onKeybuttonDown(keybutton);\n            }.bind(this));\n            keybutton.addEventListener(\"mouseenter\", function (event) {\n                // console.log(\"mouseenter\");\n                const keybutton = event.target;\n                // console.log(this._isMouseDown);\n                if (this._isMouseDown) {\n                    this._onKeybuttonDown(keybutton);\n                }\n            }.bind(this));\n            keybutton.addEventListener(\"mouseup\", function (event) {\n                // console.log(\"mouseup\");\n                const keybutton = event.target;\n                if (this._isKeyButtonLastPlayed(keybutton)) {\n                    this._onKeybuttonUp(keybutton);\n                }\n            }.bind(this));\n            keybutton.addEventListener(\"mouseleave\", function (event) {\n                // console.log(\"mouseleave\");\n                const keybutton = event.target;\n                if (this._isKeyButtonLastPlayed(keybutton)) {\n                    this._onKeybuttonUp(keybutton);\n                }\n            }.bind(this));\n        }\n    }\n    _isKeyButtonLastPlayed(keybutton) {\n        return this._viewModel.getLastPlayedKeybuttons().has(keybutton);\n    }\n    _onKeybuttonDown(keybutton) {\n        this._viewModel.onKeybuttonDown(keybutton);\n    }\n    _onKeybuttonUp(keybutton) {\n        this._viewModel.onKeybuttonUp(keybutton);\n    }\n}\n","export class PianoKeyboardTouchEventHandler {\n    constructor(pianoKeyboardViewModel, pianoKeyboardShadowRoot) {\n        this._viewModel = pianoKeyboardViewModel;\n        this._shadowRoot = pianoKeyboardShadowRoot;\n        this._boundOnTouchStart = this._onTouchStart.bind(this);\n        this._boundOnTouchMove = this._onTouchMove.bind(this);\n        this._boundOnTouchEnd = this._onTouchEnd.bind(this);\n        this._isDisabled = false;\n        this._initHandler();\n    }\n    _initHandler() {\n        // console.log(\"_initHandler\");\n        const keyboard = this._shadowRoot.querySelector(\".piano_keyboard\");\n        this._setInputContext(keyboard);\n    }\n    _setInputContext(inputContext) {\n        this._inputContext = inputContext;\n        /*绑定输入上下文的触控监听，当用户与输入上下文交互时执行*/\n        inputContext.addEventListener(\"touchstart\", this._boundOnTouchStart);\n        inputContext.addEventListener(\"touchmove\", this._boundOnTouchMove);\n        inputContext.addEventListener(\"touchend\", this._boundOnTouchEnd);\n        // console.log(\"PianoKeyboardTouchEventHandler _setInputContext() this._boundOnTouchStart\");\n        // console.log(this._boundOnTouchStart);\n    }\n    _clearInputContext() {\n        /*移除原有的输入上下文的触控监听*/\n        this._inputContext.removeEventListener(\"touchstart\", this._boundOnTouchStart);\n        this._inputContext.removeEventListener(\"touchmove\", this._boundOnTouchMove);\n        this._inputContext.removeEventListener(\"touchend\", this._boundOnTouchEnd);\n        // console.log(\"PianoKeyboardTouchEventHandler _clearInputContext()\");\n        // console.log(\"PianoKeyboardTouchEventHandler _clearInputContext() this._boundOnTouchStart\");\n        // console.log(this._boundOnTouchStart);\n    }\n    _changeInputContext(inputContext) {\n        this._clearInputContext();\n        this._setInputContext(inputContext);\n    }\n    setInputContext(inputContext) {\n        this._changeInputContext(inputContext);\n    }\n    disableInput() {\n        // console.log(\"PianoKeyboardTouchEventHandler disableInput()\");\n        this._isDisabled = true;\n    }\n    enableInput() {\n        this._isDisabled = false;\n    }\n    _onTouchStart(event) {\n        if (this._isDisabled) {\n            return;\n        }\n        event.preventDefault(); //用来防止按键事件在mousedown再处理一次\n        // console.log(\"touchstart\");\n        const keybuttons = this._getKeybuttonsFromTouch(event.touches);\n        this._onKeybuttonsDown(...keybuttons);\n    }\n    _onTouchMove(event) {\n        if (this._isDisabled) {\n            return;\n        }\n        event.preventDefault(); //阻止默认的滚动行为\n        // console.log(\"touchmove\");\n        const keybuttonsTouched = this._getKeybuttonsFromTouch(event.touches);\n        const keybuttonsNewDown = [];\n        const keybuttonsNewUp = [];\n        // console.log(\"keybuttonsTouched \"+keybuttonsTouched);\n        for (const keybutton of keybuttonsTouched) {\n            // console.log(\"keybuttonsTouched \"+keybutton);\n            if (!this._isKeyButtonLastPlayed(keybutton)) {\n                keybuttonsNewDown.push(keybutton);\n            }\n        }\n        for (const keybuttonLastPlayed of this._getKeyButtonsLastPlayed()) {\n            if (!(keybuttonsTouched.includes(keybuttonLastPlayed))) {\n                keybuttonsNewUp.push(keybuttonLastPlayed);\n            }\n        }\n        // console.log(\"keybuttonsNewDown \"+keybuttonsNewDown);\n        // console.log(\"keybuttonsNewUp \"+keybuttonsNewUp);\n        this._onKeybuttonsDown(...keybuttonsNewDown);\n        this._onKeybuttonsUp(...keybuttonsNewUp);\n    }\n    _onTouchEnd(event) {\n        if (this._isDisabled) {\n            return;\n        }\n        // console.log(\"touchend\");\n        const keybuttonsTouchEnd = this._getKeybuttonsFromTouch(event.changedTouches);\n        this._onKeybuttonsUp(...keybuttonsTouchEnd);\n    }\n    _getKeybuttonsFromTouch(touchs) {\n        const keybuttons = [];\n        for (const touch of Array.from(touchs)) {\n            const keybutton = this._getKeybuttonFromTouch(touch);\n            if (keybutton !== null) {\n                keybuttons.push(keybutton);\n            }\n        }\n        return keybuttons;\n    }\n    _getKeybuttonFromTouch(touch) {\n        const x = touch.clientX;\n        const y = touch.clientY;\n        // console.log(`touch at (${x}, ${y})`);\n        const targetElement = this._shadowRoot.elementFromPoint(x, y);\n        // 检查是否为 key 类的元素，如果是，则返回该元素\n        if (targetElement && targetElement.classList.contains('keybutton')) {\n            // console.log(`get key ${targetElement}`);\n            return targetElement;\n        }\n        else {\n            // 如果不是钢琴键，则返回 null\n            return null;\n        }\n    }\n    _isKeyButtonLastPlayed(keybutton) {\n        // console.log(\"_isKeyButtonLastPlayed \"+this._viewModel.getLastPlayedKeybuttons().has(keybutton));;\n        return this._viewModel.getLastPlayedKeybuttons().has(keybutton);\n    }\n    _getKeyButtonsLastPlayed() {\n        return this._viewModel.getLastPlayedKeybuttons();\n    }\n    _onKeybuttonsDown(...keybuttons) {\n        this._viewModel.onKeybuttonDown(...keybuttons);\n    }\n    _onKeybuttonsUp(...keybuttons) {\n        this._viewModel.onKeybuttonUp(...keybuttons);\n    }\n}\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","$a2cec5fb6ba05d81$export$81642d5e8107c35d","pitch","$a2cec5fb6ba05d81$export$22ed30b0c07e6641","$bede1a833e785154$export$20adcbf62bfd677a","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$7b875563ac389209$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$7b875563ac389209$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$df05e7a7252c168a$export$8c5538d39f6c9677","$ebe16c07d5eddf42$exports","$e37d6f5b936fe7c1$var$styleUrl","href","$e37d6f5b936fe7c1$export$ae8cf02b7e6604f5","$7d7dcba7de2ec382$export$be9fdf810b9c9ab4","constructor","pianoKeyboard","pianoKeyboardShadowRoot","_pianoKeyboard","_shadowRoot","_initAttribute","keybutton","_keybuttons","querySelectorAll","getAttribute","_lastPlayedKeybuttons","Set","getLastPlayedKeybuttons","getKeybutton","onKeybuttonDown","keybuttons","_onKeybuttonDown","add","classList","_onTriggerAttacked","onKeybuttonUp","_onKeybuttonUp","delete","remove","_onTriggerReleased","attackTrigger","console","log","hidePitchTag","PianoKeyboardElement","querySelector","setAttribute","showPitchTag","removeAttribute","$efd28ac6c1b57cf3$export$995563f7c34ce99b","pianoKeyboardViewModel","_isMouseDown","_viewModel","_initHandler","addEventListener","bind","event","target","_isKeyButtonLastPlayed","has","$b4e0c60b74737c6e$export$264188db84e8841","_boundOnTouchStart","_onTouchStart","_boundOnTouchMove","_onTouchMove","_boundOnTouchEnd","_onTouchEnd","_isDisabled","keyboard","_setInputContext","inputContext","_inputContext","_clearInputContext","removeEventListener","_changeInputContext","setInputContext","disableInput","enableInput","preventDefault","_getKeybuttonsFromTouch","touches","_onKeybuttonsDown","keybuttonsTouched","keybuttonsNewDown","keybuttonsNewUp","push","keybuttonLastPlayed","_getKeyButtonsLastPlayed","includes","_onKeybuttonsUp","keybuttonsTouchEnd","changedTouches","touchs","touch","Array","from","_getKeybuttonFromTouch","x","clientX","y","clientY","targetElement","elementFromPoint","contains","$5dca4c19303d383d$export$5581ec00194cd222","HTMLElement","_createDOM","shadowRoot","_mouseEventHandler","_touchEventHandler","attachShadow","mode","innerHTML","observedAttributes","attributeChangedCallback","attrName","oldVal","newVal","_onAttributeHidePitchTagChanged","_onAttributeDisabledChanged","_isAttributeAdded","_isAttributeRemoved","onTriggerAttacked","callback","onTriggerReleased","customElements","define"],"version":3,"file":"play_instrument.9d4a4bfb.js.map"}